<?xml version="1.0" encoding="UTF-8"?><Invoice xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:qdt="urn:oasis:names:specification:ubl:schema:xsd:QualifiedDatatypes-2" xmlns:ubltr="urn:oasis:names:specification:ubl:schema:xsd:TurkishCustomizationExtensionComponents" xmlns:udt="urn:un:unece:uncefact:data:specification:UnqualifiedDataTypesSchemaModule:2" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#" ns0:schemaLocation="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2 UBL-Invoice-2.1.xsd">
   <ext:UBLExtensions>
      <ext:UBLExtension>
         <ext:ExtensionContent><ds:Signature Id="Signature_DM02025008077190" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:SignedInfo>
<ds:CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
<ds:SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/>
<ds:Reference URI="#Signature_DM02025008077190-keyinfo">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>zzebYf1KLU61Wb9+gOa2kUjl9lgQH0InPpI0lF95iWk=</ds:DigestValue>
</ds:Reference>
<ds:Reference Id="Signature_DM02025008077190-ref0" URI="">
<ds:Transforms>
<ds:Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
</ds:Transforms>
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>5UR1ciGf/pOmt8Z0rJ1ADsJGdC6DJ0bB15A5YtRF904=</ds:DigestValue>
</ds:Reference>
<ds:Reference Type="http://uri.etsi.org/01903#SignedProperties" URI="#Signature_DM02025008077190-signedprops">
<ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
<ds:DigestValue>KDpysJ5RKSFG3cckAZZI6FTLgNDLJ6UpzWI/J6k3f1Q=</ds:DigestValue>
</ds:Reference>
</ds:SignedInfo>
<ds:SignatureValue Id="Signature_DM02025008077190-sigvalue">
bnNVVJDCuNrLDQIeiNb/3e6ls+nXlUAiJ//i/Lgpv57ZsHnl/iA37Dn0QWEQVWoKIh9ZZkrjR7U8
nu21nEkPA9hGuIuvLrYkVHnkgy6Dp1zucv++OWNU7mppASuf1FusTzNQb7oBa4f3POYUj92Nz2V+
Mq8NZ6EkgvvPiPDHrA9awYHDIJMzt0aKllUcuIkCwXHxCBq1357mVv3Oc/lY5QRppQ2HE6+9L9Ir
zNyez7xHZtWi9rRIX1IL4SdG1g/ef5qP+mXqf2wqX9S2FfvgWUitSPAG09D9+VSv1agYUvk4U/4y
Tlvp7IUVJyeIHNV+xe1jZYf21p3/wBEYuMGutg==
</ds:SignatureValue>
<ds:KeyInfo Id="Signature_DM02025008077190-keyinfo" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
<ds:X509Data>
<ds:X509Certificate>
MIIFSDCCBDCgAwIBAgIHHDc6sxsExTANBgkqhkiG9w0BAQsFADBcMQswCQYDVQQGEwJUUjFNMEsG
A1UEAwxETWFsaSBNw7xow7xyIEVsZWt0cm9uaWsgU2VydGlmaWthIEhpem1ldCBTYcSfbGF5xLFj
xLFzxLEgLSBTw7xyw7xtIDIwHhcNMjIwOTE1MDcxNDI1WhcNMjUwOTE0MDcxNDI1WjBeMRMwEQYD
VQQFEwoyNjUwMTc5OTEwMUcwRQYDVQQDDD5ELU1BUktFVCBFTEVLVFJPTsSwSyBIxLBaTUVUTEVS
IFZFIFTEsENBUkVUIEFOT07EsE0gxZ7EsFJLRVTEsDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALEciGJS/RzKm6RGHkW6CXXuy52JGq5uI/3Jhhlgud3pqiDsjwYIilYAbGgTJsaj3Yfm
xp61FoIaMBPwo0gRuRBRPAvApck7P4ueilB37MA8CQNrtJcuVhMktis3Rdity77FG1wdm3rUl+8X
ZHauBsItk/rYoqNSX5E060soDuMUFb1Od2Bu5OrQtRM3SRYqmi6SeuFHFb5TFbB8JwBUFuv5zUpC
GpKByTY6eN1Z/buq7EAx1MZi3b9ArYL8slZqqAXB4R3pVMXoZtyl4hIgGACpC2Rb5WrIqtdL2+gv
TxiPQN+k4O2+UTZIQhNSKDZSi6qTgVzX/7ZJEUnzNGLrnWkCAwEAAaOCAgswggIHMB8GA1UdIwQY
MBaAFAOE+pcx5/SHGS9lK+G0G2Onr3W+MB0GA1UdDgQWBBS+i1LNO1Bjh6N64ljOtGUZWRzk9DAO
BgNVHQ8BAf8EBAMCB4AwgcYGA1UdIASBvjCBuzCBuAYLYIYYAQIBAQUHBAEwgagwKgYIKwYBBQUH
AgEWHmh0dHA6Ly9kZXBvLmthbXVzbS5nb3YudHIvaWxrZTB6BggrBgEFBQcCAjBuDGxCdSBzZXJ0
aWZpa2EgaWxlIGlsZ2lsaSBzZXJ0aWZpa2EgdXlndWxhbWEgZXNhc2xhcsSxbsSxIG9rdW1hayBp
w6dpbiBiZWxpcnRpbGVuIHdlYiBzaXRlc2luaSB6aXlhcmV0IGVkaW5pei4wDAYDVR0TAQH/BAIw
ADAWBgNVHSUEDzANBgtghhgBAgEBBQcyATBBBgNVHR8EOjA4MDagNKAyhjBodHRwOi8vZGVwby5r
YW11c20uZ292LnRyL2t1cnVtc2FsL21tZXNocy1zMi5jcmwwgYIGCCsGAQUFBwEBBHYwdDA8Bggr
BgEFBQcwAoYwaHR0cDovL2RlcG8ua2FtdXNtLmdvdi50ci9rdXJ1bXNhbC9tbWVzaHMtczIuY3J0
MDQGCCsGAQUFBzABhihodHRwOi8vY2lzZHVwbW1zMi5rdXJ1bXNhbC5rYW11c20uZ292LnRyMA0G
CSqGSIb3DQEBCwUAA4IBAQAw59q/sieYU0uDRuuPyhEKc6BnyJP8Gxx/x+rpxzxlABxNFihlPTcI
3Cqf9YiZuATCcFVSa1tjhmSbCtFzwozqLQik75Zj8vc1FtIlBvG6NxJPQx5SG20ATrxxG3EW/MCz
9OOEnxGX4+YLOItJa/0fSl/AaKCrHz8MrCWL5hiqrsPwxE61xBctaT0w0ctGb2vMpm5IjkXqI/l4
zMO5dSktQ8QdXtutewt7mslNZYEeo8/f4mgHxVZ51wy/729BMurUMheS3pyHzBeLfUGXl0z47xjX
x3Ec+r/pSDifPPIK3pFvtwzEcekzkko1z5T5sibdwxQzRnqb2N5qHtPws6jR
</ds:X509Certificate>
<ds:X509SubjectName>CN=D-MARKET ELEKTRONİK HİZMETLER VE TİCARET ANONİM ŞİRKETİ,2.5.4.5=#130a32363530313739393130</ds:X509SubjectName>
</ds:X509Data>
<ds:KeyValue>
<ds:RSAKeyValue>
<ds:Modulus>
sRyIYlL9HMqbpEYeRboJde7LnYkarm4j/cmGGWC53emqIOyPBgiKVgBsaBMmxqPdh+bGnrUWghow
E/CjSBG5EFE8C8ClyTs/i56KUHfswDwJA2u0ly5WEyS2KzdF2K3LvsUbXB2betSX7xdkdq4Gwi2T
+tiio1JfkTTrSygO4xQVvU53YG7k6tC1EzdJFiqaLpJ64UcVvlMVsHwnAFQW6/nNSkIakoHJNjp4
3Vn9u6rsQDHUxmLdv0CtgvyyVmqoBcHhHelUxehm3KXiEiAYAKkLZFvlasiq10vb6C9PGI9A36Tg
7b5RNkhCE1IoNlKLqpOBXNf/tkkRSfM0YuudaQ==
</ds:Modulus>
<ds:Exponent>AQAB</ds:Exponent>
</ds:RSAKeyValue>
</ds:KeyValue>
</ds:KeyInfo>
<ds:Object><xades:QualifyingProperties xmlns:xades141="http://uri.etsi.org/01903/v1.4.1#" Target="#Signature_DM02025008077190" xmlns:xades="http://uri.etsi.org/01903/v1.3.2#"><xades:SignedProperties Id="Signature_DM02025008077190-signedprops"><xades:SignedSignatureProperties><xades:SigningTime>2025-05-13T23:11:47.657+03:00</xades:SigningTime><xades:SigningCertificate><xades:Cert><xades:CertDigest><ds:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><ds:DigestValue>Doje5zggzYHNOIaW6vG5IHSeCmWuggi5qzBfG0b5jMc=</ds:DigestValue></xades:CertDigest><xades:IssuerSerial><ds:X509IssuerName>CN=Mali Mühür Elektronik Sertifika Hizmet Sağlayıcısı - Sürüm 2,C=TR</ds:X509IssuerName><ds:X509SerialNumber>7942024600421573</ds:X509SerialNumber></xades:IssuerSerial></xades:Cert></xades:SigningCertificate></xades:SignedSignatureProperties></xades:SignedProperties></xades:QualifyingProperties></ds:Object>
</ds:Signature></ext:ExtensionContent>
      </ext:UBLExtension>
   </ext:UBLExtensions>
   <cbc:UBLVersionID>2.1</cbc:UBLVersionID>
   <cbc:CustomizationID>TR1.2</cbc:CustomizationID>
   <cbc:ProfileID>EARSIVFATURA</cbc:ProfileID>
   <cbc:ID>DM02025008077190</cbc:ID>
   <cbc:CopyIndicator>false</cbc:CopyIndicator>
   <cbc:UUID>F0303276-60A7-2BF1-8117-005056BF53CC</cbc:UUID>
   <cbc:IssueDate>2025-05-13</cbc:IssueDate>
   <cbc:IssueTime>22:42:56</cbc:IssueTime>
   <cbc:InvoiceTypeCode>SATIS</cbc:InvoiceTypeCode>
   <cbc:Note>YALNIZ ON TL ALTMIŞİKİ KR</cbc:Note>
   <cbc:Note>IDE:SAP Fatura No:1815890630</cbc:Note>
   <cbc:Note>HED:Cari No:9300030629</cbc:Note>
   <cbc:Note>HED:Fatura No:181589063014812025</cbc:Note>
   <cbc:Note>IDE:Gönderim Tarihi:13.05.2025</cbc:Note>
   <cbc:Note>IDE:Gönderim Zamanı:22:42:56</cbc:Note>
   <cbc:DocumentCurrencyCode>TRY</cbc:DocumentCurrencyCode>
   <cbc:LineCountNumeric>1</cbc:LineCountNumeric>
   <cac:AdditionalDocumentReference>
      <cbc:ID>3e955883-7df2-47c8-902d-c530a0476703</cbc:ID>
      <cbc:IssueDate>2025-05-13</cbc:IssueDate>
      <cac:Attachment>
         <cbc:EmbeddedDocumentBinaryObject characterSetCode="UTF-8" encodingCode="Base64" filename="DM02025008077190.xslt" mimeCode="application/xml"></cbc:EmbeddedDocumentBinaryObject>
      </cac:Attachment>
   </cac:AdditionalDocumentReference>
   <cac:AdditionalDocumentReference>
      <cbc:ID>ELEKTRONIK</cbc:ID>
      <cbc:IssueDate>2025-05-13</cbc:IssueDate>
      <cbc:DocumentTypeCode>DOCDLVTYPE</cbc:DocumentTypeCode>
   </cac:AdditionalDocumentReference>
   <cac:AdditionalDocumentReference>
      <cbc:ID>DIGER - (.)</cbc:ID>
      <cbc:IssueDate>2025-05-13</cbc:IssueDate>
      <cbc:DocumentTypeCode>ECMPAYMETHOD</cbc:DocumentTypeCode>
   </cac:AdditionalDocumentReference>
   <cac:AdditionalDocumentReference>
      <cbc:ID>2025-05-13</cbc:ID>
      <cbc:IssueDate>2025-05-13</cbc:IssueDate>
      <cbc:DocumentTypeCode>ECMPAYDATE</cbc:DocumentTypeCode>
   </cac:AdditionalDocumentReference>
   <cac:Signature>
      <cbc:ID schemeID="VKN_TCKN">2650179910</cbc:ID>
      <cac:SignatoryParty>
         <cbc:WebsiteURI>www.dmarket.com.tr</cbc:WebsiteURI>
         <cac:PartyIdentification>
            <cbc:ID schemeID="VKN">2650179910</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyIdentification>
            <cbc:ID schemeID="TICARETSICILNO">436165</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyIdentification>
            <cbc:ID schemeID="MERSISNO">0265017991000011</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyName>
            <cbc:Name>D-MARKET ELEKTRONİK HİZMETLER VE TİCARET ANONİM ŞİRKETİ</cbc:Name>
         </cac:PartyName>
         <cac:PostalAddress>
            <cbc:StreetName>KUŞTEPE MAH. MECİDİYEKÖY YOLU CAD. TRUMP TOWERS KULE 2 KAT:2</cbc:StreetName>
            <cbc:BuildingNumber>12</cbc:BuildingNumber>
            <cbc:CitySubdivisionName>ŞİŞLİ</cbc:CitySubdivisionName>
            <cbc:CityName>İSTANBUL</cbc:CityName>
            <cbc:PostalZone>34387</cbc:PostalZone>
            <cac:Country>
               <cbc:Name>TÜRKİYE</cbc:Name>
            </cac:Country>
         </cac:PostalAddress>
         <cac:PartyTaxScheme>
            <cac:TaxScheme>
               <cbc:Name>BOĞAZİÇİKURUMLAR</cbc:Name>
            </cac:TaxScheme>
         </cac:PartyTaxScheme>
         <cac:Contact>
            <cbc:Telephone>0850 252 40 00</cbc:Telephone>
            <cbc:ElectronicMail>bilgi@hepsiburada.com</cbc:ElectronicMail>
         </cac:Contact>
      </cac:SignatoryParty>
      <cac:DigitalSignatureAttachment>
         <cac:ExternalReference>
            <cbc:URI>#Signature_DM02025008077190</cbc:URI>
         </cac:ExternalReference>
      </cac:DigitalSignatureAttachment>
   </cac:Signature>
   <cac:AccountingSupplierParty>
      <cac:Party>
         <cbc:WebsiteURI>www.dmarket.com.tr</cbc:WebsiteURI>
         <cac:PartyIdentification>
            <cbc:ID schemeID="VKN">2650179910</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyIdentification>
            <cbc:ID schemeID="TICARETSICILNO">436165</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyIdentification>
            <cbc:ID schemeID="MERSISNO">0265017991000011</cbc:ID>
         </cac:PartyIdentification>
         <cac:PartyName>
            <cbc:Name>D-MARKET ELEKTRONİK HİZMETLER VE TİCARET ANONİM ŞİRKETİ</cbc:Name>
         </cac:PartyName>
         <cac:PostalAddress>
            <cbc:StreetName>KUŞTEPE MAH. MECİDİYEKÖY YOLU CAD. TRUMP TOWERS KULE 2 KAT:2</cbc:StreetName>
            <cbc:BuildingNumber>12</cbc:BuildingNumber>
            <cbc:CitySubdivisionName>ŞİŞLİ</cbc:CitySubdivisionName>
            <cbc:CityName>İSTANBUL</cbc:CityName>
            <cbc:PostalZone>34387</cbc:PostalZone>
            <cac:Country>
               <cbc:Name>TÜRKİYE</cbc:Name>
            </cac:Country>
         </cac:PostalAddress>
         <cac:PartyTaxScheme>
            <cac:TaxScheme>
               <cbc:Name>BOĞAZİÇİKURUMLAR</cbc:Name>
            </cac:TaxScheme>
         </cac:PartyTaxScheme>
         <cac:Contact>
            <cbc:Telephone>0850 252 40 00</cbc:Telephone>
            <cbc:ElectronicMail>bilgi@hepsiburada.com</cbc:ElectronicMail>
         </cac:Contact>
      </cac:Party>
   </cac:AccountingSupplierParty>
   <cac:AccountingCustomerParty>
      <cac:Party>
         <cac:PartyIdentification>
            <cbc:ID schemeID="TCKN">11111111111</cbc:ID>
         </cac:PartyIdentification>
         <cac:PostalAddress>
            <cbc:StreetName>KARABAĞLAR</cbc:StreetName>
            <cbc:CitySubdivisionName>İzmir</cbc:CitySubdivisionName>
            <cbc:CityName>İzmir</cbc:CityName>
            <cac:Country>
               <cbc:Name>Türkiye</cbc:Name>
            </cac:Country>
         </cac:PostalAddress>
         <cac:Contact>
            <cbc:Telephone>905526634034</cbc:Telephone>
            <cbc:ElectronicMail>omercansiskolu01@gmail.com</cbc:ElectronicMail>
         </cac:Contact>
         <cac:Person>
            <cbc:FirstName>Ömercan</cbc:FirstName>
            <cbc:FamilyName>Şişkolu</cbc:FamilyName>
         </cac:Person>
      </cac:Party>
   </cac:AccountingCustomerParty>
   <cac:TaxTotal>
      <cbc:TaxAmount currencyID="TRY">1.77</cbc:TaxAmount>
      <cac:TaxSubtotal>
         <cbc:TaxableAmount currencyID="TRY">8.85</cbc:TaxableAmount>
         <cbc:TaxAmount currencyID="TRY">1.77</cbc:TaxAmount>
         <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
         <cbc:Percent>20.00</cbc:Percent>
         <cac:TaxCategory>
            <cac:TaxScheme>
               <cbc:Name>KDV</cbc:Name>
               <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
            </cac:TaxScheme>
         </cac:TaxCategory>
      </cac:TaxSubtotal>
   </cac:TaxTotal>
   <cac:LegalMonetaryTotal>
      <cbc:LineExtensionAmount currencyID="TRY">8.85</cbc:LineExtensionAmount>
      <cbc:TaxExclusiveAmount currencyID="TRY">8.85</cbc:TaxExclusiveAmount>
      <cbc:TaxInclusiveAmount currencyID="TRY">10.62</cbc:TaxInclusiveAmount>
      <cbc:AllowanceTotalAmount currencyID="TRY">0.00</cbc:AllowanceTotalAmount>
      <cbc:ChargeTotalAmount currencyID="TRY">0.00</cbc:ChargeTotalAmount>
      <cbc:PayableAmount currencyID="TRY">10.62</cbc:PayableAmount>
   </cac:LegalMonetaryTotal>
   <cac:InvoiceLine>
      <cbc:ID>000010</cbc:ID>
      <cbc:Note>000010</cbc:Note>
      <cbc:InvoicedQuantity unitCode="C62">1.000</cbc:InvoicedQuantity>
      <cbc:LineExtensionAmount currencyID="TRY">8.85</cbc:LineExtensionAmount>
      <cac:TaxTotal>
         <cbc:TaxAmount currencyID="TRY">1.77</cbc:TaxAmount>
         <cac:TaxSubtotal>
            <cbc:TaxableAmount currencyID="TRY">8.85</cbc:TaxableAmount>
            <cbc:TaxAmount currencyID="TRY">1.77</cbc:TaxAmount>
            <cbc:CalculationSequenceNumeric>1</cbc:CalculationSequenceNumeric>
            <cbc:Percent>20.00</cbc:Percent>
            <cac:TaxCategory>
               <cac:TaxScheme>
                  <cbc:Name>KDV</cbc:Name>
                  <cbc:TaxTypeCode>0015</cbc:TaxTypeCode>
               </cac:TaxScheme>
            </cac:TaxCategory>
         </cac:TaxSubtotal>
      </cac:TaxTotal>
      <cac:Item>
         <cbc:Name>2083544470 nolu tahsilatın BNPL gecikme bedeli</cbc:Name>
      </cac:Item>
      <cac:Price>
         <cbc:PriceAmount currencyID="TRY">8.85000</cbc:PriceAmount>
      </cac:Price>
   </cac:InvoiceLine>
</Invoice>